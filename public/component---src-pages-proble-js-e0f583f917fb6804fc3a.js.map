{"version":3,"sources":["webpack:///./src/components/layout.module.scss","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/proble.js","webpack:///./src/components/header.module.scss","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["module","exports","Header","data","className","headerStyle","header","title","to","site","siteMetadata","navList","navItem","activeClassName","activeNavItem","Footer","author","Layout","props","layoutStyles","container","content","children","loader","enqueue","React","createContext","Problema","href","target","rel","m","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,UAAY,kCAAkC,QAAU,kC,qMC6C3DC,EA1CA,WACX,IAAMC,EAAI,OAUV,OACI,4BAAQC,UAAWC,IAAYC,QAC3B,4BACI,kBAAC,IAAD,CAAMF,UAAWC,IAAYE,MAAOC,GAAG,KAClCL,EAAKM,KAAKC,aAAaH,QAGhC,6BACI,wBAAIH,UAAWC,IAAYM,SACvB,4BACI,kBAAC,IAAD,CAAMP,UAAWC,IAAYO,QAASC,gBAAiBR,IAAYS,cAAeN,GAAG,KAArF,eAEJ,4BACI,kBAAC,IAAD,CAAMJ,UAAWC,IAAYO,QAASC,gBAAiBR,IAAYS,cAAeN,GAAG,SAArF,SAEJ,4BACI,kBAAC,IAAD,CAAMJ,UAAWC,IAAYO,QAASC,gBAAiBR,IAAYS,cAAeN,GAAG,aAArF,sBAEH,4BACG,kBAAC,IAAD,CAAMJ,UAAWC,IAAYO,QAASC,gBAAiBR,IAAYS,cAAeN,GAAG,UAArF,eAEH,4BACG,kBAAC,IAAD,CAAMJ,UAAWC,IAAYO,QAASC,gBAAiBR,IAAYS,cAAeN,GAAG,WAArF,uB,YChBTO,EAlBA,WACX,IAAMZ,EAAI,OAUV,OACI,gCACI,yCAAeA,EAAKM,KAAKC,aAAaM,OAAtC,c,iCCCGC,IAXA,SAACC,GACZ,OACI,yBAAKd,UAAWe,IAAaC,WACzB,yBAAKhB,UAAWe,IAAaE,SACzB,kBAAC,EAAD,MACCH,EAAMI,UAEX,kBAAC,EAAD,S,2KCbZ,sGAcyBC,QAAOC,QAELC,IAAMC,cAAc,K,kCChB/C,sDAgCeC,UA1BE,WACb,OACI,kBAAC,IAAD,KACI,8CACA,kGAEJ,0DACA,2GACiF,uBAAGC,KAAM,+BAA+BC,OAAO,SAASC,IAAI,uBAA5D,yDADjF,yBACkP,uBAAGF,KAAM,4BAA4BC,OAAO,SAASC,IAAI,uBAAzD,UADlP,KAIA,wDACA,mGAEI,4BACI,4BAAI,uBAAGF,KAAK,+BAA+BC,OAAO,SAASC,IAAI,uBAA3D,oDACJ,4BAAI,uBAAGF,KAAK,+BAA+BC,OAAO,SAASC,IAAI,uBAA3D,oDACJ,4BAAI,uBAAGF,KAAK,+BAA+BC,OAAO,SAASC,IAAI,uBAA3D,yD,qBCtBpB9B,EAAOC,QAAU,CAAC,OAAS,+BAA+B,QAAU,iCAAiC,MAAQ,8BAA8B,QAAU,iCAAiC,cAAgB,0C,4CCDtM,IAAsB8B,EAKpB/B,EAAOC,SALa8B,EAKWC,EAAQ,UALRD,EAAEE,SAAYF,G,wFCsBhCG,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEX,IAAMY,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-pages-proble-js-e0f583f917fb6804fc3a.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"layout-module--container--3BoYY\",\"content\":\"layout-module--content--zUuRj\"};","import React from 'react'\r\nimport { Link, graphql,useStaticQuery } from 'gatsby'\r\nimport headerStyle from './header.module.scss'\r\n\r\nconst Header = () => {\r\n    const data = useStaticQuery(graphql`\r\n        query {\r\n            site {\r\n                siteMetadata {\r\n                    title\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    \r\n    return (\r\n        <header className={headerStyle.header}>\r\n            <h1>\r\n                <Link className={headerStyle.title} to=\"/\">\r\n                    {data.site.siteMetadata.title}\r\n                </Link>\r\n            </h1>\r\n            <nav>\r\n                <ul className={headerStyle.navList}>\r\n                    <li>\r\n                        <Link className={headerStyle.navItem} activeClassName={headerStyle.activeNavItem} to=\"/\">Teck Stack</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className={headerStyle.navItem} activeClassName={headerStyle.activeNavItem} to=\"/blog\">Blog</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link className={headerStyle.navItem} activeClassName={headerStyle.activeNavItem} to=\"/projetop\">Projetos Pessoais</Link>\r\n                    </li>\r\n                     <li>\r\n                        <Link className={headerStyle.navItem} activeClassName={headerStyle.activeNavItem} to=\"/about\">Quem somos</Link>\r\n                    </li>\r\n                     <li>\r\n                        <Link className={headerStyle.navItem} activeClassName={headerStyle.activeNavItem} to=\"/proble\">Agradecimentos</Link>\r\n                     </li>\r\n                </ul>\r\n            </nav>      \r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header","import React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nconst Footer = () => {\r\n    const data = useStaticQuery(graphql`\r\n        query {\r\n            site {\r\n                siteMetadata {\r\n                    author\r\n                }\r\n            }\r\n        }\r\n    `)\r\n\r\n    return (\r\n        <footer>\r\n            <p>Created by {data.site.siteMetadata.author}, © 2020</p>\r\n        </footer> \r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport Header from '../components/header'\r\nimport Footer from '../components/footer'\r\nimport '../style/index.scss'\r\nimport layoutStyles from './layout.module.scss'\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <div className={layoutStyles.container}>\r\n            <div className={layoutStyles.content}>\r\n                <Header/>\r\n                {props.children}\r\n            </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Layout","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from'react'\r\n//import{ Link } from 'gatsby'\r\n\r\nimport Layout from '../components/layout'\r\nimport '../style/index.scss'\r\n\r\nconst Problema = () => {\r\n    return (\r\n        <Layout>\r\n            <h1>Agradecimentos</h1>\r\n            <h2>Não conseguiriamos fazer esse projetos sem a ajuda dessas pessoas.</h2>\r\n\r\n        <h3>Criando um site com Gatsby</h3>\r\n        <p>\r\n            Para desenvolver o Blog usando Gatsby, foi utilizado o vídeo do Andrew Mead: <a href= \"https://youtu.be/8t0vNu2fCCM\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby JS - The Great Gatsby Bootcamp [Full Tutorial]</a>, e o site oficial do <a href= \"https://www.gatsbyjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby</a>.\r\n        </p>\r\n\r\n        <h3>Colocando um site na AWS</h3>\r\n        <p>\r\n            Para ter feito essa parte utilizamos os videos e a ajudas de colegas:\r\n            <ul>\r\n                <li><a href=\"https://youtu.be/QVouMIlyaJ8\" target=\"_blank\" rel=\"noopener noreferrer\">Como abrir portas para instâncias do Amazon EC2</a></li>\r\n                <li><a href=\"https://youtu.be/HR2UlqK4_Nw\" target=\"_blank\" rel=\"noopener noreferrer\">Aula Prática - Criando um servidor linux na AWS</a></li>\r\n                <li><a href=\"https://youtu.be/mCbiBcE1lA0\" target=\"_blank\" rel=\"noopener noreferrer\">Configurando um servidor na Amazon Web Services</a></li>\r\n            </ul>\r\n        </p>\r\n\r\n        </Layout>\r\n    \r\n    )\r\n}\r\n\r\nexport default Problema","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header-module--header--2NYIJ\",\"navList\":\"header-module--nav-list--1ob9s\",\"title\":\"header-module--title--2Ml1U\",\"navItem\":\"header-module--nav-item---V6P3\",\"activeNavItem\":\"header-module--active-nav-item--2MbjT\"};","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}